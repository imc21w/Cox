struct Node{
    fun init(){
        this.a = 10;
        println("node init");
    }

    fun look(a){
        if (isNull(a))
            a = "node";
        println(a, " ", "look");
    }
}

struct Child extends Node{
    fun init(){
        println("child init");
    }
}

struct Apple extends Child{
    fun init(){
        println("apple init");
    }

    fun set(){
        //super.a = 10;
    }

    fun look(){
        print super.a;
    }
}

let a = Apple();
println();
a.set();
a.look();
println();

fun fbnq(n){
    if (n == 0)
        return 0;
    if (n == 1 or n == 2)
        return 1;
    return fbnq(n-1) + fbnq(n-2);
}

let b = time();
println( fbnq(25) );
println("花费了:" + (time() - b)/ 1000);